#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct main0_out
{
    float4 outColor [[color(0)]];
};

fragment main0_out main0(texture2d_ms<float> accumTexture [[texture(0)]], texture2d_ms<float> revealTexture [[texture(1)]], sampler accumTextureSmplr [[sampler(0)]], sampler revealTextureSmplr [[sampler(1)]], float4 gl_FragCoord [[position]], uint gl_SampleID [[sample_id]])
{
    main0_out out = {};
    gl_FragCoord.xy += get_sample_position(gl_SampleID) - 0.5;
    int2 uv = int2(gl_FragCoord.xy);
    float4 accum = accumTexture.read(uint2(uv), gl_SampleID);
    float reveal = revealTexture.read(uint2(uv), gl_SampleID).x;
    float3 color = accum.xyz;
    if (accum.w > 0.001000000047497451305389404296875)
    {
        color = accum.xyz / float3(accum.w);
    }
    out.outColor = float4(color, reveal);
    return out;
}
